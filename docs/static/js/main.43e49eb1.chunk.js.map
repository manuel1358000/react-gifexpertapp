{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","categoria","ReactDOM","render","document","getElementById"],"mappings":"qMAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAc5C,OACI,0BAAMC,SARS,SAACC,GAChBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,OACnCN,EAAc,OAKd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAhBY,SAACP,GACrBF,EAAcE,EAAEQ,OAAOF,Y,uBCRlBG,EAAO,uCAAE,WAAMC,GAAN,uBAAAC,EAAA,6DACZC,EADY,iDACkCC,UAAUH,GAD5C,+DAECI,MAAMF,GAFP,cAEZG,EAFY,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KACDC,EAAMD,EAAKE,KAAI,SAAAC,GACjB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QARvB,kBAWXM,GAXW,4CAAF,sDCEPO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAClC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCFHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECFZ,SAACA,GAAY,IAAD,EACTd,mBAAS,CAC/BqB,KAAK,GACLa,SAAQ,IAHuB,mBAC5BC,EAD4B,KACrBC,EADqB,KAcnC,OATAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAGtB,CAACpB,IACIqB,EDXcK,CAAa1B,GAA3BO,EAD4B,EAC5BA,KAAKa,EADuB,EACvBA,QACZ,OACI,oCACI,wBAAIJ,UAAU,qCAAqChB,GAE/C,yBAAKgB,UAAU,aACdI,GAAS,uBAAGJ,UAAU,oCAAb,WAENT,EAAKE,KAAI,SAACC,GAAD,OACL,kBAAC,EAAD,eACIiB,IAAKjB,EAAIC,IACLD,UEbnBkB,EAAe,WAAM,MAGM1C,mBAAS,CAAC,cAHhB,mBAGvB2C,EAHuB,KAGX5C,EAHW,KAW9B,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BAEQ4C,EAAWpB,KAAI,SAACqB,GAAD,OACX,kBAAC,EAAD,CACIH,IAAKG,EACL9B,SAAU8B,U,MCpBtCC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.43e49eb1.chunk.js","sourcesContent":["import React,{useState} from 'react'\n\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({setCategories}) => {\n    \n    const [inputValue, setInputValue] = useState('');\n    const handleInputChange=(e)=>{\n        setInputValue(e.target.value);\n    };\n \n    const handleSubmit=(e)=>{\n        e.preventDefault();\n        if(inputValue.trim().length>2){\n            setCategories(cats=>[inputValue,...cats]);\n            setInputValue('');\n        }\n    }   \n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange} \n            />\n        </form>\n    )\n}\n\n//hace que sea requerida en la llamada del hook\nAddCategory.propTypes={\n    setCategories: PropTypes.func.isRequired\n}","export const getGifs =async(category)=>{\n    const url=`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=GEoqVpPuLTLiazF1jhWKKNmON3egenSg`;\n    const resp = await fetch(url);\n    const {data}  = await resp.json();\n    const gifs= data.map(img=>{\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images.downsized_medium.url\n        };\n    });\n    return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ({id,title,url}) => {\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title}/>\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport {GifGridItem} from './GifGridItem';\n\nexport const GifGrid = ({category}) => {\n    const {data,loading}=useFetchGifs(category);\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n            {\n                <div className=\"card-grid\">\n                {loading&&<p className=\"animate__animated animate__flash\">Loading</p>}\n                {\n                    data.map((img)=>(\n                        <GifGridItem \n                            key={img.id} \n                            {...img}\n                        />\n                    ))\n                }\n                </div>\n            }\n        </>\n    )\n}\n","import {useState,useEffect} from 'react';\nimport {getGifs} from '../helpers/getGifs';\nexport const  useFetchGifs=(category)=>{\n    const [state, setState] = useState({\n        data:[],\n        loading:true\n    });\n    useEffect(()=>{\n        getGifs(category)\n            .then(imgs=>{\n                setState({\n                    data:imgs,\n                    loading:false\n                });\n            });       \n    },[category]);\n    return state;\n}","import React, {useState} from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\nexport const GifExpertApp = () => {\n\n    //const categories = ['One Punch','Samurai x','Dragon Ball'];\n    const [categories, setCategories] = useState(['One Punch']);\n\n   /* const handleAdd = ()=>{\n        //aniadimos los elementos que tenemos\n        setCategories([...categories,'HunterxHunter']);\n    }*/\n\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={setCategories}/>\n            <hr/>\n            <ol>\n                {\n                    categories.map((categoria)=>(\n                        <GifGrid \n                            key={categoria}\n                            category={categoria}\n                        />\n                    ))\n                        //return <li key={categoria}>{categoria}</li>;\n                }\n            </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}